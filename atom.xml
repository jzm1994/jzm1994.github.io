<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snail琳子</title>
  <subtitle>stay hungry,stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jzm1994.github.com/"/>
  <updated>2017-03-24T02:15:23.119Z</updated>
  <id>https://jzm1994.github.com/</id>
  
  <author>
    <name>JZM</name>
    <email>zm.jin@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XUtils3</title>
    <link href="https://jzm1994.github.com/2017/03/20/XUtils3%E8%81%94%E7%BD%91%E6%A8%A1%E5%9D%97/"/>
    <id>https://jzm1994.github.com/2017/03/20/XUtils3联网模块/</id>
    <published>2017-03-19T22:33:01.000Z</published>
    <updated>2017-03-24T02:15:23.119Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<h2 id="联网"><a href="#联网" class="headerlink" title="联网"></a>联网</h2><h4 id="Get请求"><a href="#Get请求" class="headerlink" title="Get请求"></a>Get请求</h4><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">getDataByGet_Post</span><span class="params">()</span> </span>&#123;</div><div class="line">RequestParams request = <span class="keyword">new</span></div><div class="line">RequestParams(<span class="string">"http://api.m.mtime.cn/PageSubArea/TrailerList.api"</span>);</div><div class="line">x.http().get(request, <span class="keyword">new</span> Callback.CommonCallback&lt;String&gt;() &#123;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String result)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onSuccess-result=="</span> + result);</div><div class="line">Toast.makeText(xUtils3NetActivity.<span class="keyword">this</span>, <span class="string">"result=="</span> + result,</div><div class="line">Toast.LENGTH_SHORT).show();</div><div class="line">textView.setText(result+<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable ex, <span class="keyword">boolean</span> isOnCallback)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onError=="</span> + ex.getMessage());</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCancelled</span><span class="params">(CancelledException cex)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onCancelled=="</span> + cex.getMessage());</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onFinished</span><span class="params">()</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onFinished=="</span>);</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h4><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">getDataByGet_Post</span><span class="params">()</span> </span>&#123;</div><div class="line">RequestParams request = <span class="keyword">new</span></div><div class="line">RequestParams(<span class="string">"http://api.m.mtime.cn/PageSubArea/TrailerList.api"</span>);</div><div class="line">x.http().post(request, <span class="keyword">new</span> Callback.CommonCallback&lt;String&gt;() &#123;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String result)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onSuccess-result=="</span> + result);</div><div class="line">Toast.makeText(xUtils3NetActivity.<span class="keyword">this</span>, <span class="string">"result=="</span> + result,</div><div class="line">Toast.LENGTH_SHORT).show();</div><div class="line">textView.setText(result+<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable ex, <span class="keyword">boolean</span> isOnCallback)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onError=="</span> + ex.getMessage());</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCancelled</span><span class="params">(CancelledException cex)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onCancelled=="</span> + cex.getMessage());</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onFinished</span><span class="params">()</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onFinished=="</span>);</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="文件下载-amp-断点续传"><a href="#文件下载-amp-断点续传" class="headerlink" title="文件下载&amp;断点续传"></a>文件下载&amp;断点续传</h4><figure class="highlight d"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">*  下载文件</div><div class="line">*/</div><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> downloadfile() &#123;</div><div class="line"><span class="keyword">final</span> RequestParams reqest = <span class="keyword">new</span></div><div class="line">RequestParams(<span class="string">"http://vfx.mtime.cn/Video/2016/09/02/mp4/160902093947207</span></div><div class="line">009_480.mp4");</div><div class="line">reqest.setAutoRename(<span class="literal">false</span>);<span class="comment">// 设置是否根据头信息自动命名文件</span></div><div class="line">reqest.setSaveFilePath(Environment.getExternalStorageDirectory() +</div><div class="line"><span class="string">"/atguigu/oppo.mp4"</span>);</div><div class="line">reqest.setExecutor(<span class="keyword">new</span> PriorityExecutor(<span class="number">3</span>, <span class="literal">true</span>));<span class="comment">// 自定义线程池 , 有效</span></div><div class="line">的值范围 [<span class="number">1</span>, <span class="number">3</span>],  设置为 <span class="number">3</span> 时 ,  可能阻塞图片加载 .</div><div class="line">reqest.setCancelFast(<span class="literal">true</span>);<span class="comment">// 是否可以被立即停止 .</span></div><div class="line">x.http().get(reqest, <span class="keyword">new</span> Callback.ProgressCallback&lt;File&gt;() &#123;</div><div class="line"><span class="keyword">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> onSuccess(File result) &#123;</div><div class="line">LogUtil.e(<span class="string">"onSuccess- 下载文件成功"</span>+result.toString());</div><div class="line">&#125;</div><div class="line"><span class="keyword">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> onError(Throwable ex, boolean isOnCallback) &#123;</div><div class="line">LogUtil.e(<span class="string">"onError- 下载文件失败"</span>+ex.getMessage());</div><div class="line">&#125;</div><div class="line"><span class="keyword">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> onCancelled(CancelledException cex) &#123;</div><div class="line">LogUtil.e(<span class="string">"onCancelled-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> onFinished() &#123;</div><div class="line">LogUtil.e(<span class="string">"onFinished-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> onWaiting() &#123;</div><div class="line">LogUtil.e(<span class="string">"onWaiting-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> onStarted() &#123;</div><div class="line">LogUtil.e(<span class="string">"onStarted-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> onLoading(<span class="built_in">long</span> total, <span class="built_in">long</span> current, boolean</div><div class="line">isDownloading) &#123;</div><div class="line">progressBar.setMax((<span class="keyword">int</span>) total);</div><div class="line">progressBar.setProgress((<span class="keyword">int</span>) current);</div><div class="line">LogUtil.e(<span class="string">"onLoading-"</span>+current+<span class="string">"/"</span>+total);</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">*  文件上传</div><div class="line">*/</div><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">uploadfile</span><span class="params">()</span> </span>&#123;</div><div class="line">RequestParams params = <span class="keyword">new</span></div><div class="line">RequestParams(<span class="string">"http://192.168.11.215:8080/FileUpload/FileUploadServlet"</span></div><div class="line">);</div><div class="line"><span class="comment">////  使用 multipart 表单上传文件</span></div><div class="line">params.setMultipart(<span class="keyword">true</span>);</div><div class="line">params.addBodyParameter(<span class="string">"file"</span>, <span class="keyword">new</span></div><div class="line">File(Environment.getExternalStorageDirectory() + <span class="string">"/atguigu/oppo.mp4"</span>),</div><div class="line"><span class="keyword">null</span>, <span class="string">"oppo.mp4"</span>);</div><div class="line">x.http().post(params, <span class="keyword">new</span> Callback.ProgressCallback&lt;File&gt;() &#123;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(File result)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onSuccess- 上传文件成功"</span> + result.toString());</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable ex, <span class="keyword">boolean</span> isOnCallback)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onError- 下载文件失败"</span> + ex.getMessage());</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCancelled</span><span class="params">(CancelledException cex)</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onCancelled-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onFinished</span><span class="params">()</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onFinished-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onWaiting</span><span class="params">()</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onWaiting-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onStarted</span><span class="params">()</span> </span>&#123;</div><div class="line">LogUtil.e(<span class="string">"onStarted-"</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onLoading</span><span class="params">(<span class="keyword">long</span> total, <span class="keyword">long</span> current, <span class="keyword">boolean</span></span></span></div><div class="line">isDownloading) &#123;</div><div class="line">progressBar.setMax((<span class="keyword">int</span>) total);</div><div class="line">progressBar.setProgress((<span class="keyword">int</span>) current);</div><div class="line">LogUtil.e(<span class="string">"onLoading-"</span> + current + <span class="string">"/"</span> + total);</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;联网&quot;&gt;&lt;a href=&quot;#联网&quot; class=&quot;headerlink&quot; title=&quot;联网&quot;&gt;&lt;/a&gt;联网&lt;/h2&gt;&lt;h4 id=&quot;Get请求&quot;&gt;&lt;a href=&quot;#Get请求&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
    
      <category term="XUtils" scheme="https://jzm1994.github.com/tags/XUtils/"/>
    
  </entry>
  
  <entry>
    <title>图片加载框架 Glide</title>
    <link href="https://jzm1994.github.com/2017/03/20/%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E6%A1%86%E6%9E%B6-Glide/"/>
    <id>https://jzm1994.github.com/2017/03/20/图片加载框架-Glide/</id>
    <published>2017-03-19T21:07:08.000Z</published>
    <updated>2017-03-24T02:15:38.298Z</updated>
    
    <content type="html"><![CDATA[<p>在泰国举行的谷歌开发者论坛上，谷歌为我们介绍了一个名叫 Glide 的图片加载库，作者bumptech。这个库被广泛的运用在google的开源项目中，包括2014年google I/O大会上发布的官方app。<br><a href="https://github.com/bumptech/glide" target="_blank" rel="external">Github地址</a><br><a id="more"></a></p>
<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一 简介"></a>一 简介</h2><ul>
<li>使用简单</li>
<li>可配置度高，自适应程度高</li>
<li>支持常见图片格式 jpg png gif webp</li>
<li>支持多种数据源 网络、本地、资源、Assets 等</li>
<li>高效缓存策略 支持Memory和Disk图片缓存 默认Bitmap格式采用RGB_565内存使用至少减少一半</li>
<li>生命周期集成 根据Activity/Fragment生命周期自动管理请求</li>
<li>高效处理Bitmap 使用Bitmap Pool使Bitmap复用，主动调用recycle回收需要回收的Bitmap，减小系统回收压力  </li>
</ul>
<h2 id="二-功能"><a href="#二-功能" class="headerlink" title="二 功能"></a>二 功能</h2><h4 id="1-简单使用"><a href="#1-简单使用" class="headerlink" title="1. 简单使用"></a>1. 简单使用</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">Glide</span></div><div class="line">    <span class="selector-class">.with</span>(this)</div><div class="line">    <span class="selector-class">.load</span>(<span class="string">"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png"</span>)</div><div class="line">    <span class="selector-class">.into</span>(imageView);</div></pre></td></tr></table></figure>
<h4 id="2-Glide-with-使用"><a href="#2-Glide-with-使用" class="headerlink" title="2. Glide.with()使用"></a>2. Glide.with()使用</h4><ul>
<li>with(Context context)：使用Application上下文，Glide请求将不受Activity/Fragment生命周期控制。</li>
<li>with(Activity activity)：使用Activity作为上下文，Glide的请求会受到Activity生命周期控制。</li>
<li>with(FragmentActivity activity)：Glide的请求会受到FragmentActivity生命周期控制。</li>
<li>with(android.app.Fragment fragment)：Glide的请求会受到Fragment 生命周期控制。</li>
<li>with(android.support.v4.app.Fragment fragment)：Glide的请求会受到Fragment生命周期控制。</li>
</ul>
<h4 id="3-load-使用"><a href="#3-load-使用" class="headerlink" title="3. load()使用"></a>3. load()使用</h4><blockquote>
<p>Glide基本可以load任何可以拿到的媒体资源<br>SD卡资源：load(“file://“+ Environment.getExternalStorageDirectory().getPath()+”/test.jpg”)<br>assets资源：load(“file:///android_asset/f003.gif”)<br>raw资源：load(“Android.resource://com.frank.glide/raw/raw_1”)或load(“android.resource://com.frank.glide/raw/“+R.raw.raw_1)<br>drawable资源：load(“android.resource://com.frank.glide/drawable/news”)或load(“android.resource://com.frank.glide/drawable/“+R.drawable.news)<br>ContentProvider资源：load(“content://media/external/images/media/139469”)<br>http资源：load(“<a href="http://img.my.csdn.NET/uploads/201508/05/1438760757_3588.jpg" target="_blank" rel="external">http://img.my.csdn.NET/uploads/201508/05/1438760757_3588.jpg</a>“)<br>https资源：load(“<a href="https://img.alicdn.com/tps/TB1uyhoMpXXXXcLXVXXXXXXXXXX-476-538.jpg_240x5000q50.jpg_.webp" target="_blank" rel="external">https://img.alicdn.com/tps/TB1uyhoMpXXXXcLXVXXXXXXXXXX-476-538.jpg_240x5000q50.jpg_.webp</a>“)<br><strong>注意: load不限于String类型</strong><br>还可以是：load(Uri uri)，load(File file)，load(Integer resourceId)，load(URL url)，load(byte[] model)，load(T model)，loadFromMediaStore(Uri uri)。</p>
</blockquote>
<h4 id="4-重要功能"><a href="#4-重要功能" class="headerlink" title="4. 重要功能"></a>4. 重要功能</h4><ol>
<li>禁止内存缓存： .skipMemoryCache(true)</li>
<li>清除内存缓存：  // 必须在UI线程中调用 Glide.get(context).clearMemory();</li>
<li>禁止磁盘缓存： .diskCacheStrategy(DiskCacheStrategy.NONE)</li>
<li>清除磁盘缓存： // 必须在后台线程中调用，建议同时clearMemory()<br> <code>Glide.get(applicationContext).clearDiskCache();</code></li>
<li>获取缓存大小：<br> <code>new GetDiskCacheSizeTask(textView).execute(new File(getCacheDir(), DiskCache.Factory.DEFAULT_DISK_CACHE_DIR));</code></li>
<li><p>指定资源的优先加载顺序：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Glide</div><div class="line">    .with(context)</div><div class="line">    .load(heroImageUrl)</div><div class="line">    .priority(Priority.HIGH)</div><div class="line">    .into(imageViewHero);</div><div class="line">//后加载</div><div class="line">Glide</div><div class="line">    .with(context)</div><div class="line">    .load(itemImageUrl)</div><div class="line">    .priority(Priority.LOW)</div><div class="line">    .into(imageViewItem);</div></pre></td></tr></table></figure>
</li>
<li><p>先显示缩略图，再显示原图：</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">//用原图的<span class="number">1</span>/<span class="number">10</span>作为缩略图</div><div class="line">    Glide</div><div class="line"><span class="meta">        .with</span>(this)</div><div class="line"><span class="meta">        .load</span>(<span class="string">"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png"</span>)</div><div class="line"><span class="meta">        .thumbnail</span>(<span class="number">0.</span>1f)</div><div class="line"><span class="meta">        .into</span>(iv_0)<span class="comment">;</span></div><div class="line"></div><div class="line">    //用其它图片作为缩略图</div><div class="line">    DrawableRequestBuilder&lt;Integer&gt; thumbnailRequest = Glide</div><div class="line"><span class="meta">        .with</span>(this)</div><div class="line"><span class="meta">        .load</span>(R.drawable.news)<span class="comment">;</span></div><div class="line"></div><div class="line">    Glide.with(this)</div><div class="line"><span class="meta">        .load</span>(<span class="string">"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png"</span>)</div><div class="line"><span class="meta">        .thumbnail</span>(thumbnailRequest)</div><div class="line"><span class="meta">        .into</span>(iv_0)<span class="comment">;</span></div></pre></td></tr></table></figure>
</li>
<li><p>对图片进行裁剪、模糊、滤镜等处理：</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//圆形裁剪</span></div><div class="line">   Glide.with(<span class="keyword">this</span>)</div><div class="line">       .load(<span class="string">"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png"</span>)</div><div class="line">       .bitmapTransform(<span class="keyword">new</span> CropCircleTransformation(<span class="keyword">this</span>))</div><div class="line">       .<span class="keyword">into</span>(iv_0);</div><div class="line"></div><div class="line">   <span class="comment">//圆角处理</span></div><div class="line">   Glide.with(<span class="keyword">this</span>)</div><div class="line">       .load(<span class="string">"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png"</span>)</div><div class="line">       .bitmapTransform(<span class="keyword">new</span> RoundedCornersTransformation(<span class="keyword">this</span>,<span class="number">30</span>,<span class="number">0</span>, RoundedCornersTransformation.CornerType.ALL))</div><div class="line">       .<span class="keyword">into</span>(iv_0);</div><div class="line"></div><div class="line">   <span class="comment">//灰度处理</span></div><div class="line">   Glide.with(<span class="keyword">this</span>)</div><div class="line">       .load(<span class="string">"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png"</span>)</div><div class="line">       .bitmapTransform(<span class="keyword">new</span> GrayscaleTransformation(<span class="keyword">this</span>))</div><div class="line">       .<span class="keyword">into</span>(iv_0);</div><div class="line">   <span class="comment">//其它变换...</span></div></pre></td></tr></table></figure>
</li>
<li><p>对请求状态进行监听：</p>
</li>
<li>对资源的下载进度进行监听： </li>
</ol>
<h4 id="5-API说明"><a href="#5-API说明" class="headerlink" title="5 API说明"></a>5 API说明</h4><ol>
<li>thumbnail(float sizeMultiplier).<br>请求给定系数的缩略图。如果缩略图比全尺寸图先加载完，就显示缩略图，否则就不显示。系数sizeMultiplier必须在(0,1)之间，可以递归调用该方法。</li>
<li>sizeMultiplier(float sizeMultiplier).<br>在加载资源之前给Target大小设置系数。</li>
<li>diskCacheStrategy(DiskCacheStrategy strategy).<br>设置缓存策略。DiskCacheStrategy.SOURCE：缓存原始数据，DiskCacheStrategy.RESULT：缓存变换(如缩放、裁剪等)后的资源数据，DiskCacheStrategy.NONE：什么都不缓存，DiskCacheStrategy.ALL：缓存SOURC和RESULT。默认采用DiskCacheStrategy.RESULT策略，对于download only操作要使用DiskCacheStrategy.SOURCE。</li>
<li>priority(Priority priority).<br>指定加载的优先级，优先级越高越优先加载，但不保证所有图片都按序加载。枚举Priority.IMMEDIATE，Priority.HIGH，Priority.NORMAL，Priority.LOW。默认为Priority.NORMAL。</li>
<li>dontAnimate().<br>移除所有的动画。</li>
<li>animate(int animationId).<br>在异步加载资源完成时会执行该动画。</li>
<li>animate(ViewPropertyAnimation.Animator animator).<br>在异步加载资源完成时会执行该动画。</li>
<li>placeholder(int resourceId).<br>设置资源加载过程中的占位Drawable。</li>
<li>placeholder(Drawable drawable).<br>设置资源加载过程中的占位Drawable。</li>
<li>fallback(int resourceId).<br>设置model为空时要显示的Drawable。如果没设置fallback，model为空时将显示error的Drawable，如果error的Drawable也没设置，就显示placeholder的Drawable。</li>
<li>fallback(Drawable drawable).<br>设置model为空时显示的Drawable。</li>
<li>error(int resourceId).<br>设置load失败时显示的Drawable。</li>
<li>error(Drawable drawable).<br>设置load失败时显示的Drawable。</li>
<li>listener(RequestListener&lt;? super ModelType, TranscodeType&gt; requestListener).<br>监听资源加载的请求状态，可以使用两个回调：onResourceReady(R resource, T model, Target<r> target, boolean isFromMemoryCache, boolean isFirstResource)和onException(Exception e, T model, Target&lt;R&gt; target, boolean isFirstResource)，但不要每次请求都使用新的监听器，要避免不必要的内存申请，可以使用单例进行统一的异常监听和处理。</r></li>
<li>skipMemoryCache(boolean skip).<br>设置是否跳过内存缓存，但不保证一定不被缓存（比如请求已经在加载资源且没设置跳过内存缓存，这个资源就会被缓存在内存中）。</li>
<li>override(int width, int height).<br>重新设置Target的宽高值（单位为pixel）。</li>
<li>into(Y target). 设置资源将被加载到的Target。</li>
<li>into(ImageView view).<br>设置资源将被加载到的ImageView。取消该ImageView之前所有的加载并释放资源。</li>
<li>into(int width, int height).<br>后台线程加载时要加载资源的宽高值（单位为pixel）。</li>
<li>preload(int width, int height).<br>预加载resource到缓存中（单位为pixel）。</li>
<li>asBitmap().<br>无论资源是不是gif动画，都作为Bitmap对待。如果是gif动画会停在第一帧。</li>
<li>asGif().<br>把资源作为GifDrawable对待。如果资源不是gif动画将会失败，会回调.error()。</li>
</ol>
<h2 id="三-使用步骤"><a href="#三-使用步骤" class="headerlink" title="三 使用步骤"></a>三 使用步骤</h2><h4 id="1-在build-gradle中添加依赖："><a href="#1-在build-gradle中添加依赖：" class="headerlink" title="1. 在build.gradle中添加依赖："></a>1. 在build.gradle中添加依赖：</h4><p><code>compile &#39;com.github.bumptech.glide:glide:3.7.0&#39;</code></p>
<h4 id="2-如果你的项目没有support-v4库，还需要添加support-v4依赖："><a href="#2-如果你的项目没有support-v4库，还需要添加support-v4依赖：" class="headerlink" title="2. 如果你的项目没有support-v4库，还需要添加support-v4依赖："></a>2. 如果你的项目没有support-v4库，还需要添加support-v4依赖：</h4><p><code>compile &#39;com.android.support:support-v4:23.3.0&#39;</code></p>
<h4 id="3-如果使用变换，可以添加一个自定义的变换库"><a href="#3-如果使用变换，可以添加一个自定义的变换库" class="headerlink" title="3. 如果使用变换，可以添加一个自定义的变换库"></a>3. 如果使用变换，可以添加一个自定义的变换库</h4><p>github网址：<a href="https://github.com/wasabeef/glide-transformations" target="_blank" rel="external">https://github.com/wasabeef/glide-transformations</a><br>添加依赖：<br><code>compile &#39;jp.wasabeef:glide-transformations:2.0.1&#39;</code><br>If you want to use the GPU Filters<br><code>compile &#39;jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0&#39;</code></p>
<h2 id="四-参考博客"><a href="#四-参考博客" class="headerlink" title="四 参考博客"></a>四 参考博客</h2><p><a href="http://blog.csdn.net/shangmingchao/article/details/51125554" target="_blank" rel="external">http://blog.csdn.net/shangmingchao/article/details/51125554</a><br><a href="http://www.cnblogs.com/whoislcj/p/5558168.html" target="_blank" rel="external">http://www.cnblogs.com/whoislcj/p/5558168.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在泰国举行的谷歌开发者论坛上，谷歌为我们介绍了一个名叫 Glide 的图片加载库，作者bumptech。这个库被广泛的运用在google的开源项目中，包括2014年google I/O大会上发布的官方app。&lt;br&gt;&lt;a href=&quot;https://github.com/bumptech/glide&quot;&gt;Github地址&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="图片加载框架" scheme="https://jzm1994.github.com/categories/%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Photos" scheme="https://jzm1994.github.com/tags/Photos/"/>
    
  </entry>
  
  <entry>
    <title>MarkdownPad 注册码</title>
    <link href="https://jzm1994.github.com/2017/03/20/MarkdownPad-%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>https://jzm1994.github.com/2017/03/20/MarkdownPad-注册码/</id>
    <published>2017-03-19T20:54:56.000Z</published>
    <updated>2017-03-24T02:15:16.506Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p><strong>邮箱：</strong></p>
<p>Soar360@live.com</p>
<p><strong>授权秘钥：</strong></p>
<p>GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8<br>qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi<br>2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/      QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/  ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;邮箱：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Soar360@live.com&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;授权秘钥：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i
    
    </summary>
    
      <category term="Android" scheme="https://jzm1994.github.com/categories/Android/"/>
    
    
      <category term="markdown" scheme="https://jzm1994.github.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>图</title>
    <link href="https://jzm1994.github.com/2017/03/18/%E5%9B%BE/"/>
    <id>https://jzm1994.github.com/2017/03/18/图/</id>
    <published>2017-03-18T06:08:05.000Z</published>
    <updated>2017-03-24T02:19:38.342Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> ]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建个人博客</title>
    <link href="https://jzm1994.github.com/2017/03/18/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://jzm1994.github.com/2017/03/18/Hexo-GitHub搭建个人博客/</id>
    <published>2017-03-17T22:44:54.000Z</published>
    <updated>2017-03-24T02:15:09.520Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hoxo</a>出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。<br><a id="more"></a>  </p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p><a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git下载</a></p>
<h4 id="安装Node"><a href="#安装Node" class="headerlink" title="安装Node"></a>安装Node</h4><p>两种方式安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>  :  </p>
<ol>
<li>使用Git Bash的方式<br><code>$curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code><br><code>$ nvm install stable （安装完成后需要执行该命令来重启终端)</code>  </li>
<li>通过下载安装程序<br>注意安装时，勾选Add to PATH选项<h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4>Node和Git都安装好后，可执行如下命令安装hexo：<br><code>npm install -g hexo</code><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2></li>
</ol>
<ul>
<li>注册GitHub帐号</li>
<li>建立一个与用户名对应的仓库，格式必须是[usename.github.io]  </li>
<li>添加ssh公钥 [Setting -&gt; SSH and GPG keys -&gt; New SSH key] </li>
<li>验证添加成功<br><code>ssh -T git@github.com</code></li>
</ul>
<h4 id="获取公钥详解"><a href="#获取公钥详解" class="headerlink" title="获取公钥详解"></a>获取公钥详解</h4><ol>
<li>打开git bash  </li>
<li>执行生成公钥和私钥的命令：ssh-keygen -t rsa 并按回车3下（为什么按三下，是因为有提示你是否需要设置密码，如果设置了每次使用Git都会用到密码，一般都是直接不写为空，直接回车就好了）。会在一个文件夹里面生成一个私钥 id_rsa和一个公钥id_rsa.pub。  </li>
<li>执行查看公钥的命令：cat ~/.ssh/id_rsa.pub  </li>
</ol>
<h2 id="查看博客"><a href="#查看博客" class="headerlink" title="查看博客"></a>查看博客</h2><ol>
<li>初始化<br><code>hexo init &lt;folder&gt;</code><br>或者cd到目标目录，执行hexo init  </li>
<li>生成静态页面<br><code>hexo g</code></li>
<li>本地启动<br><code>hexo s</code><br><a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>可查看效果</li>
</ol>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h4 id="hexo目录结构"><a href="#hexo目录结构" class="headerlink" title="hexo目录结构"></a>hexo目录结构</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── .deploy</div><div class="line">├── <span class="keyword">public</span></div><div class="line">├── scaffolds</div><div class="line">├── scripts</div><div class="line">├── <span class="keyword">source</span></div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">├── themes</div><div class="line">├── _config.yml</div><div class="line">└── <span class="keyword">package</span>.json</div></pre></td></tr></table></figure>
<ul>
<li>.deploy：执行hexo deploy命令部署到GitHub上的内容目录</li>
<li>public：执行hexo generate命令，输出的静态网页内容目录</li>
<li>scaffolds：layout模板文件目录，其中的md文件可以添加编辑</li>
<li>scripts：扩展脚本目录，这里可以自定义一些javascript脚本<br>-source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、fav<br>icon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。</li>
<li>_drafts：草稿文章</li>
<li>_posts：发布文章</li>
<li>themes：主题文件目录</li>
<li>_config.yml：全局配置文件，大多数的设置都在这里</li>
<li>package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮  </li>
</ul>
<h4 id="config-yml简介："><a href="#config-yml简介：" class="headerlink" title="_config.yml简介："></a>_config.yml简介：</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> <span class="string">Snail琳子</span> <span class="comment">#网站标题</span></div><div class="line"><span class="attr">subtitle:</span> <span class="string">stay</span> <span class="string">hungry,stay</span> <span class="string">foolish</span> <span class="comment">#网站副标题</span></div><div class="line"><span class="attr">description:</span> <span class="comment">#描述</span></div><div class="line"><span class="attr">author:</span> <span class="string">JZM</span> <span class="comment">#作者</span></div><div class="line"><span class="attr">email:</span> <span class="string">zm.jin@qq.com</span> <span class="comment">#联系邮箱</span></div><div class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span> <span class="comment">#语言</span></div><div class="line"><span class="attr">timezone:</span> <span class="comment">#时区</span></div><div class="line"></div><div class="line"><span class="comment"># URL #域名和文件结构</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attr">url:</span> <span class="attr">https://jzm1994.github.com/</span>  <span class="comment">#网址</span></div><div class="line"><span class="attr">root:</span> <span class="string">/</span>  <span class="comment">#网站根目录</span></div><div class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span>  <span class="comment">#文章的 永久链接 格式</span></div><div class="line"><span class="attr">permalink_defaults:</span>  <span class="comment">#永久链接中各部分的默认值</span></div><div class="line"></div><div class="line"><span class="comment"># Directory </span></div><div class="line"><span class="attr">source_dir:</span> <span class="string">source</span>        <span class="comment">#资源文件夹，这个文件夹用来存放内容</span></div><div class="line"><span class="attr">public_dir:</span> <span class="string">public</span>        <span class="comment">#公共文件夹，这个文件夹用于存放生成的站点文件</span></div><div class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span>             <span class="comment">#标签文件夹</span></div><div class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span>     <span class="comment">#归档文件夹 </span></div><div class="line"><span class="attr">category_dir:</span> <span class="string">categories</span>  <span class="comment">#分类文件夹</span></div><div class="line"></div><div class="line"><span class="comment"># Writing #写文章选项</span></div><div class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></div><div class="line"><span class="attr">default_layout:</span> <span class="string">post</span></div><div class="line"><span class="attr">auto_spacing:</span> <span class="literal">false</span></div><div class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line"><span class="attr">max_open_file:</span> <span class="number">100</span></div><div class="line"><span class="attr">multi_thread:</span> <span class="literal">true</span></div><div class="line"><span class="attr">filename_case:</span> <span class="number">0</span></div><div class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></div><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></div><div class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">future:</span> <span class="literal">true</span></div><div class="line"><span class="attr">highlight:</span> <span class="comment">#代码高亮</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span> <span class="comment">#是否启用</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span> <span class="comment">#是否显示行号</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  tab_replace:</span></div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag</span></div><div class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></div><div class="line"><span class="attr">category_map:</span></div><div class="line"><span class="attr">tag_map:</span></div><div class="line"><span class="comment"># Server #本地服务参数</span></div><div class="line"><span class="comment">## Hexo uses Connect as a server</span></div><div class="line"><span class="comment">## You can customize the logger format as defined in</span></div><div class="line"><span class="comment">## http://www.senchalabs.org/connect/logger.html</span></div><div class="line"><span class="attr">port:</span> <span class="number">4000</span></div><div class="line"><span class="attr">logger:</span> <span class="literal">true</span></div><div class="line"><span class="attr">logger_format:</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format #日期显示格式</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></div><div class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></div><div class="line"></div><div class="line"><span class="comment"># Pagination #分页设置</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#每页10篇文章</span></div><div class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></div><div class="line"></div><div class="line"><span class="comment"># Extensions #插件，暂时未安装插件</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="attr">theme:</span> <span class="string">next</span></div><div class="line"></div><div class="line"><span class="comment"># Deployment #部署</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repo:</span></div><div class="line"><span class="attr">      github:</span> <span class="string">git@github.com:jzm1994/jzm1994.github.io.git</span></div><div class="line"><span class="attr">      coding:</span> <span class="string">git@git.coding.net:jzm1994/jzm1994.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure>
<h4 id="hexo-themes-简介："><a href="#hexo-themes-简介：" class="headerlink" title="hexo\themes\简介："></a>hexo\themes\简介：</h4><figure class="highlight glsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── languages          <span class="meta">#多语言</span></div><div class="line">|   ├── <span class="keyword">default</span>.yml    <span class="meta">#默认语言</span></div><div class="line">|   └── zh-CN.yml      <span class="meta">#中文语言</span></div><div class="line">├── <span class="keyword">layout</span>             <span class="meta">#布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span></div><div class="line">|   ├── _partial       <span class="meta">#局部的布局，此目录下的*.ejs是对头尾等局部的控制</span></div><div class="line">|   └── _widget        <span class="meta">#小挂件的布局，页面下方小挂件的控制</span></div><div class="line">├── source             <span class="meta">#源码</span></div><div class="line">|   ├── css            <span class="meta">#css源码 </span></div><div class="line">|   |   ├── _base      <span class="meta">#*.styl基础css</span></div><div class="line">|   |   ├── _partial   <span class="meta">#*.styl局部css</span></div><div class="line">|   |   ├── fonts      <span class="meta">#字体</span></div><div class="line">|   |   ├── images     <span class="meta">#图片</span></div><div class="line">|   |   └── style.styl <span class="meta">#*.styl引入需要的css源码</span></div><div class="line">|   ├── fancybox       <span class="meta">#fancybox效果源码</span></div><div class="line">|   └── js             <span class="meta">#javascript源代码</span></div><div class="line">├── _config.yml        <span class="meta">#主题配置文件</span></div><div class="line">└── README.md          <span class="meta">#用GitHub的都知道</span></div></pre></td></tr></table></figure>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>hexo n [layout] “博客标题” = hexo new [layout] “博客标题”  #新建文章 layout指布局 默认是post<br>hexo p = hexo public<br>hexo g = hexo generate #生成静态网页至public目录<br>hexo s = hexo service #启动服务本地预览<br>hexo d = hexo deploy #部署到Github/Coding<br>hexo clean #网页不能正常显示清除缓存<br>hexo g -d #复合命令<br>hexo new page “pageName” #新建页面</p>
<h2 id="细节配置"><a href="#细节配置" class="headerlink" title="细节配置"></a>细节配置</h2><h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NextT主题</a><br>        git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next</a> themes/next<br>启用NextT主题，打开hexo_config.yml，修改 theme 字段<br>        theme: next<br>打开hexo\themes\next，编辑主题配置文件_config.yml</p>
<h4 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h4><p>在hexo\themes\modernist\layout_partial\head.ejs下，找到这句：<br>        <link rel="icon" type="image/x-icon" href="<%- config.root %>favicon.ico"><br>将favicon.ico放到工程hexo\source下。可以在<a href="http://www.faviconer.com/" target="_blank" rel="external">Faviconer</a>制作ico图标，国内有<a href="http://www.bitbug.net/" target="_blank" rel="external">比特虫</a>。  </p>
<h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h4><p>以上是文章摘要 <!--more--> 以下是余下全文 </p>
<h4 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h4><p><a href="http://ibruce.info/2013/12/22/count-views-of-hexo/" target="_blank" rel="external">为hexo博客添加访问次数统计功能</a>  </p>
<h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><p><a href="http://duoshuo.com/" target="_blank" rel="external">多说第三方评论系统</a>  </p>
<ol>
<li>在主题_config.yml中配置duoshuo_shortname：二级域名中的shortname</li>
<li>复制代码粘贴到 hexo\themes\next\layout_partial\comment.ejs里面：  <figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> <span class="keyword">if</span> (config.disqus_shortname &amp;&amp; page.comments)&#123; </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"comment"</span>&gt;</span></div><div class="line">	#多说通用代码</div><div class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> &#125; </span><span class="xml"><span class="tag">%&gt;</span></span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h4><p>分享服务商：<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>,<a href="http://www.jiathis.com/" target="_blank" rel="external">加网</a>,<a href="http://www.bshare.cn/" target="_blank" rel="external">bShare</a>,<a href="http://share.baidu.com/" target="_blank" rel="external">百度分享</a>。<br>加网添加方式：</p>
<ol>
<li>在hexo\themes\modernist\layout_partial\post下新建jiathis.ejs文件</li>
<li>注册加网获得你的分享代码，写入jiathis.ejs  </li>
<li>在hexo\themes\modernist\layout_partial\article.ejs中，添加&lt;%-partial(‘post/jiathis’)%&gt;。</li>
</ol>
<h4 id="404"><a href="#404" class="headerlink" title="404"></a>404</h4><p>GitHub Pages自定义404页面直接在根目录下创建404.html。404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名和使用hexo s在本机调试都不起作用。<br><a href="http://www.qq.com/404" target="_blank" rel="external">腾讯公益404</a></p>
<h4 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h4><p><a href="https://portal.qiniu.com/create" target="_blank" rel="external">七牛云</a>存储图片提供图片外链。</p>
<h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><ol>
<li>RSS<br><code>npm install hexo-generator-feed --save</code><br>开启RSS<br><code>rss: /atom.xml</code></li>
</ol>
<h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>更新hexo:<br><code>npm update -g hexo</code><br>更新主题:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> themes/<span class="keyword">next</span></div><div class="line">git pull</div></pre></td></tr></table></figure></p>
<p>更新插件:<br><code>npm update</code></p>
<h4 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h4><h2 id="搭建过程出现问题"><a href="#搭建过程出现问题" class="headerlink" title="搭建过程出现问题"></a>搭建过程出现问题</h2><h4 id="Hexo博客，解析不了标题（-）"><a href="#Hexo博客，解析不了标题（-）" class="headerlink" title="Hexo博客，解析不了标题（#）"></a>Hexo博客，解析不了标题（#）</h4><p>markdown标题标准写法需要在”#”和后面字符之间加一个空格<br><code>## hello world</code></p>
<h4 id="localhost-4000测试不成功"><a href="#localhost-4000测试不成功" class="headerlink" title="localhost: 4000测试不成功"></a>localhost: 4000测试不成功</h4><p>hexo s：启动本地服务  Ctrl+c指的是关闭服务  </p>
<h4 id="hexo-g-执行报错"><a href="#hexo-g-执行报错" class="headerlink" title="hexo g: 执行报错"></a>hexo g: 执行报错</h4><p>命令需要在init后的文件夹内执行</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">Hexo你的博客</a>  </li>
<li><a href="http://lucifr.com/2013/06/02/hexo-on-cloud-with-dropbox-and-vps/" target="_blank" rel="external">Hexo 服务器端布署及 Dropbox 同步</a>3. <a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="external">Markdown——入门指南</a>  </li>
<li><a href="http://www.cnblogs.com/tengj/p/5352572.html" target="_blank" rel="external">hexo干货系列：（四）将hexo博客同时托管到github和coding</a>  </li>
<li><a href="http://www.cnblogs.com/MrReed/p/6373988.html" target="_blank" rel="external">Git简单生成生成公钥和私钥方法</a>  </li>
<li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">NextT使用文档</a>  </li>
<li><a href="http://blog.csdn.net/poem_of_sunshine/article/details/29369785" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot;&gt;hoxo&lt;/a&gt;出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jzm1994.github.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://jzm1994.github.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
