{"meta":{"title":"Snail琳子","subtitle":"stay hungry,stay foolish","description":null,"author":"JZM","url":"https://jzm1994.github.com"},"pages":[{"title":"关于","date":"2017-03-17T15:54:51.000Z","updated":"2017-03-18T11:10:23.191Z","comments":false,"path":"about/index.html","permalink":"https://jzm1994.github.com/about/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-03-18T10:59:46.000Z","updated":"2017-03-18T11:02:49.730Z","comments":false,"path":"tags/index.html","permalink":"https://jzm1994.github.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"图片加载框架 Glide","slug":"图片加载框架-Glide","date":"2017-03-19T21:07:08.000Z","updated":"2017-03-19T22:01:41.633Z","comments":true,"path":"2017/03/20/图片加载框架-Glide/","link":"","permalink":"https://jzm1994.github.com/2017/03/20/图片加载框架-Glide/","excerpt":"摘要在泰国举行的谷歌开发者论坛上，谷歌为我们介绍了一个名叫 Glide 的图片加载库，作者bumptech。这个库被广泛的运用在google的开源项目中，包括2014年google I/O大会上发布的官方app。Github地址","text":"摘要在泰国举行的谷歌开发者论坛上，谷歌为我们介绍了一个名叫 Glide 的图片加载库，作者bumptech。这个库被广泛的运用在google的开源项目中，包括2014年google I/O大会上发布的官方app。Github地址 一 简介 使用简单 可配置度高，自适应程度高 支持常见图片格式 jpg png gif webp 支持多种数据源 网络、本地、资源、Assets 等 高效缓存策略 支持Memory和Disk图片缓存 默认Bitmap格式采用RGB_565内存使用至少减少一半 生命周期集成 根据Activity/Fragment生命周期自动管理请求 高效处理Bitmap 使用Bitmap Pool使Bitmap复用，主动调用recycle回收需要回收的Bitmap，减小系统回收压力 二 功能1. 简单使用1234Glide .with(this) .load(\"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png\") .into(imageView); 2. Glide.with()使用 with(Context context)：使用Application上下文，Glide请求将不受Activity/Fragment生命周期控制。 with(Activity activity)：使用Activity作为上下文，Glide的请求会受到Activity生命周期控制。 with(FragmentActivity activity)：Glide的请求会受到FragmentActivity生命周期控制。 with(android.app.Fragment fragment)：Glide的请求会受到Fragment 生命周期控制。 with(android.support.v4.app.Fragment fragment)：Glide的请求会受到Fragment生命周期控制。 3. load()使用 Glide基本可以load任何可以拿到的媒体资源SD卡资源：load(“file://“+ Environment.getExternalStorageDirectory().getPath()+”/test.jpg”)assets资源：load(“file:///android_asset/f003.gif”)raw资源：load(“Android.resource://com.frank.glide/raw/raw_1”)或load(“android.resource://com.frank.glide/raw/“+R.raw.raw_1)drawable资源：load(“android.resource://com.frank.glide/drawable/news”)或load(“android.resource://com.frank.glide/drawable/“+R.drawable.news)ContentProvider资源：load(“content://media/external/images/media/139469”)http资源：load(“http://img.my.csdn.NET/uploads/201508/05/1438760757_3588.jpg“)https资源：load(“https://img.alicdn.com/tps/TB1uyhoMpXXXXcLXVXXXXXXXXXX-476-538.jpg_240x5000q50.jpg_.webp“)注意: load不限于String类型还可以是：load(Uri uri)，load(File file)，load(Integer resourceId)，load(URL url)，load(byte[] model)，load(T model)，loadFromMediaStore(Uri uri)。 4. 重要功能 禁止内存缓存： .skipMemoryCache(true) 清除内存缓存： // 必须在UI线程中调用 Glide.get(context).clearMemory(); 禁止磁盘缓存： .diskCacheStrategy(DiskCacheStrategy.NONE) 清除磁盘缓存： // 必须在后台线程中调用，建议同时clearMemory() Glide.get(applicationContext).clearDiskCache(); 获取缓存大小： new GetDiskCacheSizeTask(textView).execute(new File(getCacheDir(), DiskCache.Factory.DEFAULT_DISK_CACHE_DIR)); 指定资源的优先加载顺序： 1234567891011Glide .with(context) .load(heroImageUrl) .priority(Priority.HIGH) .into(imageViewHero);//后加载Glide .with(context) .load(itemImageUrl) .priority(Priority.LOW) .into(imageViewItem); 先显示缩略图，再显示原图： 12345678910111213141516//用原图的1/10作为缩略图 Glide .with(this) .load(\"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png\") .thumbnail(0.1f) .into(iv_0); //用其它图片作为缩略图 DrawableRequestBuilder&lt;Integer&gt; thumbnailRequest = Glide .with(this) .load(R.drawable.news); Glide.with(this) .load(\"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png\") .thumbnail(thumbnailRequest) .into(iv_0); 对图片进行裁剪、模糊、滤镜等处理： 123456789101112131415161718//圆形裁剪 Glide.with(this) .load(\"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png\") .bitmapTransform(new CropCircleTransformation(this)) .into(iv_0); //圆角处理 Glide.with(this) .load(\"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png\") .bitmapTransform(new RoundedCornersTransformation(this,30,0, RoundedCornersTransformation.CornerType.ALL)) .into(iv_0); //灰度处理 Glide.with(this) .load(\"http://inthecheesefactory.com/uploads/source/nestedfragment/fragments.png\") .bitmapTransform(new GrayscaleTransformation(this)) .into(iv_0); //其它变换... 对请求状态进行监听： 对资源的下载进度进行监听： 三 使用步骤1. 在build.gradle中添加依赖：compile &#39;com.github.bumptech.glide:glide:3.7.0&#39; 2. 如果你的项目没有support-v4库，还需要添加support-v4依赖：compile &#39;com.android.support:support-v4:23.3.0&#39; 3. 如果使用变换，可以添加一个自定义的变换库github网址：https://github.com/wasabeef/glide-transformations添加依赖：compile &#39;jp.wasabeef:glide-transformations:2.0.1&#39;If you want to use the GPU Filterscompile &#39;jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0&#39; 四 参考博客http://blog.csdn.net/shangmingchao/article/details/51125554http://www.cnblogs.com/whoislcj/p/5558168.html","categories":[{"name":"图片加载框架","slug":"图片加载框架","permalink":"https://jzm1994.github.com/categories/图片加载框架/"}],"tags":[{"name":"Photos","slug":"Photos","permalink":"https://jzm1994.github.com/tags/Photos/"}]},{"title":"MarkdownPad 注册码","slug":"MarkdownPad-注册码","date":"2017-03-19T20:54:56.000Z","updated":"2017-03-19T21:04:35.286Z","comments":true,"path":"2017/03/20/MarkdownPad-注册码/","link":"","permalink":"https://jzm1994.github.com/2017/03/20/MarkdownPad-注册码/","excerpt":"摘要","text":"摘要 邮箱： Soar360@live.com 授权秘钥： GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/ QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==","categories":[{"name":"Android","slug":"Android","permalink":"https://jzm1994.github.com/categories/Android/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://jzm1994.github.com/tags/markdown/"}]},{"title":"图","slug":"图","date":"2017-03-18T06:08:05.000Z","updated":"2017-03-19T15:56:45.957Z","comments":true,"path":"2017/03/18/图/","link":"","permalink":"https://jzm1994.github.com/2017/03/18/图/","excerpt":"摘要","text":"摘要","categories":[],"tags":[]},{"title":"Hexo+GitHub搭建个人博客","slug":"Hexo-GitHub搭建个人博客","date":"2017-03-17T22:44:54.000Z","updated":"2017-03-19T19:06:07.181Z","comments":true,"path":"2017/03/18/Hexo-GitHub搭建个人博客/","link":"","permalink":"https://jzm1994.github.com/2017/03/18/Hexo-GitHub搭建个人博客/","excerpt":"摘要hoxo出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。","text":"摘要hoxo出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。 环境搭建安装GitGit下载 安装Node两种方式安装Node.js : 使用Git Bash的方式$curl https://raw.github.com/creationix/nvm/master/install.sh | sh$ nvm install stable （安装完成后需要执行该命令来重启终端) 通过下载安装程序注意安装时，勾选Add to PATH选项安装HexoNode和Git都安装好后，可执行如下命令安装hexo：npm install -g hexoGitHub 注册GitHub帐号 建立一个与用户名对应的仓库，格式必须是[usename.github.io] 添加ssh公钥 [Setting -&gt; SSH and GPG keys -&gt; New SSH key] 验证添加成功ssh -T git@github.com 获取公钥详解 打开git bash 执行生成公钥和私钥的命令：ssh-keygen -t rsa 并按回车3下（为什么按三下，是因为有提示你是否需要设置密码，如果设置了每次使用Git都会用到密码，一般都是直接不写为空，直接回车就好了）。会在一个文件夹里面生成一个私钥 id_rsa和一个公钥id_rsa.pub。 执行查看公钥的命令：cat ~/.ssh/id_rsa.pub 查看博客 初始化hexo init &lt;folder&gt;或者cd到目标目录，执行hexo init 生成静态页面hexo g 本地启动hexo shttp://localhost:4000可查看效果 目录hexo目录结构1234567891011.├── .deploy├── public├── scaffolds├── scripts├── source| ├── _drafts| └── _posts├── themes├── _config.yml└── package.json .deploy：执行hexo deploy命令部署到GitHub上的内容目录 public：执行hexo generate命令，输出的静态网页内容目录 scaffolds：layout模板文件目录，其中的md文件可以添加编辑 scripts：扩展脚本目录，这里可以自定义一些javascript脚本-source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。 _drafts：草稿文章 _posts：发布文章 themes：主题文件目录 _config.yml：全局配置文件，大多数的设置都在这里 package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮 _config.yml简介：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Snail琳子 #网站标题subtitle: stay hungry,stay foolish #网站副标题description: #描述author: JZM #作者email: zm.jin@qq.com #联系邮箱language: zh-Hans #语言timezone: #时区# URL #域名和文件结构## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://jzm1994.github.com/ #网址root: / #网站根目录permalink: :year/:month/:day/:title/ #文章的 永久链接 格式permalink_defaults: #永久链接中各部分的默认值# Directory source_dir: source #资源文件夹，这个文件夹用来存放内容public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件tag_dir: tags #标签文件夹archive_dir: archives #归档文件夹 category_dir: categories #分类文件夹# Writing #写文章选项new_post_name: :title.md # File name of new postsdefault_layout: postauto_spacing: falsetitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabmax_open_file: 100multi_thread: truefilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: #代码高亮 enable: true #是否启用 line_number: true #是否显示行号 auto_detect: true tab_replace:# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Server #本地服务参数## Hexo uses Connect as a server## You can customize the logger format as defined in## http://www.senchalabs.org/connect/logger.htmlport: 4000logger: truelogger_format:# Date / Time format #日期显示格式## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination #分页设置## Set per_page to 0 to disable paginationper_page: 10 #每页10篇文章pagination_dir: page# Extensions #插件，暂时未安装插件## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next# Deployment #部署## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:jzm1994/jzm1994.github.io.git coding: git@git.coding.net:jzm1994/jzm1994.git branch: master hexo\\themes\\简介：123456789101112131415161718.├── languages #多语言| ├── default.yml #默认语言| └── zh-CN.yml #中文语言├── layout #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制| ├── _partial #局部的布局，此目录下的*.ejs是对头尾等局部的控制| └── _widget #小挂件的布局，页面下方小挂件的控制├── source #源码| ├── css #css源码 | | ├── _base #*.styl基础css| | ├── _partial #*.styl局部css| | ├── fonts #字体| | ├── images #图片| | └── style.styl #*.styl引入需要的css源码| ├── fancybox #fancybox效果源码| └── js #javascript源代码├── _config.yml #主题配置文件└── README.md #用GitHub的都知道 命令hexo n [layout] “博客标题” = hexo new [layout] “博客标题” #新建文章 layout指布局 默认是posthexo p = hexo publichexo g = hexo generate #生成静态网页至public目录hexo s = hexo service #启动服务本地预览hexo d = hexo deploy #部署到Github/Codinghexo clean #网页不能正常显示清除缓存hexo g -d #复合命令hexo new page “pageName” #新建页面 细节配置主题NextT主题 git clone https://github.com/iissnan/hexo-theme-next themes/next启用NextT主题，打开hexo_config.yml，修改 theme 字段 theme: next打开hexo\\themes\\next，编辑主题配置文件_config.yml 图标在hexo\\themes\\modernist\\layout_partial\\head.ejs下，找到这句： 将favicon.ico放到工程hexo\\source下。可以在Faviconer制作ico图标，国内有比特虫。 摘要以上是文章摘要 以下是余下全文 统计为hexo博客添加访问次数统计功能 评论多说第三方评论系统 在主题_config.yml中配置duoshuo_shortname：二级域名中的shortname 复制代码粘贴到 hexo\\themes\\next\\layout_partial\\comment.ejs里面： 12345&lt;% if (config.disqus_shortname &amp;&amp; page.comments)&#123; %&gt;&lt;section id=\"comment\"&gt; #多说通用代码&lt;/section&gt;&lt;% &#125; %&gt; 分享分享服务商：多说,加网,bShare,百度分享。加网添加方式： 在hexo\\themes\\modernist\\layout_partial\\post下新建jiathis.ejs文件 注册加网获得你的分享代码，写入jiathis.ejs 在hexo\\themes\\modernist\\layout_partial\\article.ejs中，添加&lt;%-partial(‘post/jiathis’)%&gt;。404GitHub Pages自定义404页面直接在根目录下创建404.html。404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名和使用hexo s在本机调试都不起作用。腾讯公益404图床七牛云存储图片提供图片外链。插件 RSSnpm install hexo-generator-feed --save开启RSSrss: /atom.xml 更新更新hexo:npm update -g hexo更新主题:12cd themes/nextgit pull 更新插件:npm update 申请域名搭建过程出现问题Hexo博客，解析不了标题（#）markdown标题标准写法需要在”#”和后面字符之间加一个空格## hello world localhost: 4000测试不成功hexo s：启动本地服务 Ctrl+c指的是关闭服务 hexo g: 执行报错命令需要在init后的文件夹内执行 参考文献 Hexo你的博客 Hexo 服务器端布署及 Dropbox 同步3. Markdown——入门指南 hexo干货系列：（四）将hexo博客同时托管到github和coding Git简单生成生成公钥和私钥方法 NextT使用文档 如何搭建一个独立博客——简明Github Pages与Hexo教程","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://jzm1994.github.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://jzm1994.github.com/tags/Hexo/"}]}]}